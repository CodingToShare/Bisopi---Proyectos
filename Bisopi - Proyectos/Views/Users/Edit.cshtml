@model Bisopi___Proyectos.ViewModels.UserViewModel

<h4>Editar Colaborador</h4>
<hr />
<br />

<div class="row">
    <div class="col-12">
        <span class="float-right">
            <a class="btn btn-dark" href="Setup/Users">Volver</a>
        </span>
    </div>
    <div class="col-12">
        <form asp-controller="Users" asp-action="Edit" method="post" enctype="multipart/form-data">

            @using (Html.DevExtreme().ValidationGroup())
            {
                @Html.HiddenFor(x => x.UserId, new { @class = "UserId", @id = "UserId" })

                <div class="row">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="dx-field">
                                <div class="dx-field-item-label-location-top">@Html.LabelFor(x => x.FirstName)</div>
                                <div class="dx-field-item-content-location-bottom">
                                    @(Html.DevExtreme().TextBoxFor(x => x.FirstName)
                                        .ID("FirstName")
                                        .Placeholder("Escriba el nombre del Colaborador")
                                        )
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="dx-field">
                                <div class="dx-field-item-label-location-top">@Html.LabelFor(x => x.LastName)</div>
                                <div class="dx-field-item-content-location-bottom">
                                    @(Html.DevExtreme().TextBoxFor(x => x.LastName)
                                        .ID("LastName")
                                        .Placeholder("Escriba el apellido del Colaborador")
                                        )
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="dx-field">
                                <div class="dx-field-item-label-location-top">@Html.LabelFor(x => x.Area)</div>
                                <div class="dx-field-item-content-location-bottom">
                                    @(Html.DevExtreme().SelectBoxFor(x => x.Area)
                                        .DisplayExpr("Name")
                                        .ValueExpr("Id")
                                        .ID("Area")
                                        .DataSource(d => d.Mvc().Controller("APIGroups").LoadAction("GetSelectBox").Key("Id"))
                                        .SearchMode(DropDownSearchMode.Contains)
                                        .SearchEnabled(true)
                                        .MinSearchLength(3)
                                        .ShowDataBeforeSearch(true)
                                        .ShowDropDownButton(true)
                                        .DeferRendering(false)
                                        .Placeholder("Seleccione un Area...")
                                        )
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="dx-field">
                                <div class="dx-field-item-label-location-top">@Html.LabelFor(x => x.Role)</div>
                                <div class="dx-field-item-content-location-bottom">
                                    @(Html.DevExtreme().SelectBoxFor(x => x.Role)
                                        .DisplayExpr("Name")
                                        .ValueExpr("RolesDataID")
                                        .ID("Roles")
                                        .DataSource(d => d.Mvc().Controller("APIUsers").LoadAction("GetRoles").Key("RolesDataID"))
                                        .SearchMode(DropDownSearchMode.Contains)
                                        .SearchEnabled(true)
                                        .MinSearchLength(3)
                                        .ShowDataBeforeSearch(true)
                                        .ShowDropDownButton(true)
                                        .DeferRendering(false)
                                        .Placeholder("Seleccione un cargo...")
                                        )
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="dx-field">
                                <div class="dx-field-item-label-location-top">@Html.LabelFor(x => x.IsActive)</div>
                                <div class="dx-field-item-content-location-bottom">
                                    @(Html.DevExtreme().CheckBoxFor(x => x.IsActive)
                                        .ID("IsActive")
                                        .Value(true)
                                        .ElementAttr("aria-label", "Checked")
                                        )
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="dx-field">
                                <div class="dx-field-item-label-location-top">@Html.LabelFor(x => x.Phone)</div>
                                <div class="dx-field-item-content-location-bottom">
                                    @(Html.DevExtreme().TextBoxFor(x => x.Phone)
                                        .ID("Phone")
                                        .Placeholder("Escriba el Telefono")
                                        )
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="dx-field">
                                <div class="dx-field-item-label-location-top">@Html.LabelFor(x => x.City)</div>
                                <div class="dx-field-item-content-location-bottom">
                                    @(Html.DevExtreme().SelectBoxFor(x => x.City)
                                        .DisplayExpr("Name")
                                        .ValueExpr("Id")
                                        .ID("City")
                                        .DataSource(d => d.Mvc().Controller("APICities").LoadAction("GetSelectBox").Key("Id"))
                                        .SearchMode(DropDownSearchMode.Contains)
                                        .SearchEnabled(true)
                                        .MinSearchLength(3)
                                        .ShowDataBeforeSearch(true)
                                        .ShowDropDownButton(true)
                                        .DeferRendering(false)
                                        .Placeholder("Seleccione una ciudad...")
                                        )
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group">
                            <div class="dx-field">
                                <div class="dx-field-item-label-location-top">@Html.LabelFor(x => x.Email)</div>
                                <div class="dx-field-item-content-location-bottom">
                                    @(Html.DevExtreme().TextBoxFor(x => x.Email)
                                        .ID("Email")
                                        .Placeholder("Escriba el correo")
                                        )
                                </div>
                            </div>
                        </div>
                    </div>

                    <h5>Costos</h5>

                    <div class="col-12">

                        @(Html.DevExtreme().DataGrid<Bisopi___Proyectos.Models.Cost>()
                            .ID("gridContainer")
                            .AllowColumnReordering(true)
                            .RowAlternationEnabled(true)
                            .AllowColumnResizing(true)
                            .ShowRowLines(true)
                            .ShowBorders(true)
                            .WordWrapEnabled(true)
                            .ColumnAutoWidth(true)
                            .ColumnResizingMode(ColumnResizingMode.Widget)
                            .SearchPanel(s => s
                            .Visible(true)
                            .HighlightCaseSensitive(true))
                            .Grouping(grouping => grouping.AutoExpandAll(true))
                            .GroupPanel(groupPanel => groupPanel.Visible(true))
                            .FilterPanel(f => f.Visible(true))
                            .HeaderFilter(h => h.Visible(true))
                            .Selection(s => s.Mode(SelectionMode.Multiple))
                            .RemoteOperations(true)
                            .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                            .DataSource(ds => ds.Mvc()
                            .LoadParams(new { id = Model.UserId })
                            .Controller("APICosts")
                            .LoadAction("Get")
                            .InsertAction("Post")
                            .UpdateAction("Put")
                            .DeleteAction("Delete")
                            .Key("CostID")
                            )
                            .OnInitNewRow(@<text>
                                function(e) {
                                e.data.UserID = $('.UserId').val();
                                }
                            </text>)
                            .RemoteOperations(true)
                            .Columns(columns =>
                            {

                                columns.Add()
                                .Type(GridCommandColumnType.Buttons)
                                .Width(110)
                                .Buttons(b =>
                                {
                                    b.Add().Name(GridColumnButtonName.Edit);
                                    b.Add().Name(GridColumnButtonName.Delete);
                                });

                                columns.AddFor(m => m.SeniorityID).Lookup(lookup => lookup
                                .DataSource(ds => ds.WebApi().Controller("APICosts").LoadAction("SenioritiesLookup").Key("Value"))
                                .ValueExpr("Value")
                                .DisplayExpr("Text")
                                );

                                columns.AddFor(m => m.DateFrom);

                                columns.AddFor(m => m.DateUntil);

                                columns.AddFor(m => m.ProjectValue);

                            })
                            .Editing(e => e
                            .AllowAdding(true)
                            .AllowUpdating(true)
                            .AllowDeleting(true)
                            .Mode(GridEditMode.Popup)
                            .UseIcons(true)
                            )
                            )

                    </div>

                    <br />

                    <div class="col-md-12 p-4">
                        <div class="form-group">
                            <div class="center">
                                @(Html.DevExtreme().Button()
                                    .ElementAttr("class", "validate")
                                    .Text("Guardar")
                                    .Type(ButtonType.Success)
                                    .UseSubmitBehavior(true)
                                    .OnClick("saveClick")
                                    )
                            </div>
                        </div>
                    </div>

                    <br />
                    <br />

                </div>
            }
        </form>
    </div>

</div>

<script>
    DevExpress.config({
        editorStylingMode: "filled"
    });

    function saveClick(e) {
        var result = e.validationGroup.validate();
        if (!result.isValid) {
            DevExpress.ui.notify("Debe diligenciar todos los campos obligatorios.", "error");
            e.cancel;
        }
    }

</script>