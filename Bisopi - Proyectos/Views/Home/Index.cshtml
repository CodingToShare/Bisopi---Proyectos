@model List<Project>
@foreach (Project project in Model)
{
    <div>
        <div class="row"><div class="col-12"><h5>@project.ProjectName (@project.Country.CountryName)</h5></div></div>
        <table class="table table-striped table-hover">
            <thead class="thead-dark">
                <tr style="text-align:center;">
                    <th class="p-1" scope="col" style="width:130px">Grupo</th>
                    <th class="p-1" scope="col">Tarea</th>
                    <th class="p-1" scope="col" style="width:100px">Fecha Inicio</th>
                    <th class="p-1" scope="col" style="width:100px">Fecha Fin</th>
                    <th class="p-1" scope="col" style="width:100px">Estimado</th>
                    <th class="p-1" scope="col" style="width:100px">Reportado</th>
                    <th class="p-1" scope="col" style="width:100px">Estado</th>
                    <th class="p-1" scope="col" style="width:80px">Play</th>
                    <th class="p-1" scope="col" style="width:30px">Reportar</th>
                    <th class="p-1" scope="col" style="width:30px">Historial</th>
                </tr>
            </thead>
            <tbody>
                @if (project.Tasks != null)
                {
                    Guid? previousTaskGroupID = Guid.Empty;
                    @foreach (ProjectTask task in project.Tasks)
                    {
                        <tr style='text-align:left;'>
                            @if (previousTaskGroupID != task.TaskGroupID)
                            {
                                //numero de tareas pertenecientes al mismo grupo
                                int rowspan = rowspan = project.Tasks.Where(x => x.TaskGroupID == task.TaskGroupID).Count();
                                <th class="p-1" scope="row" rowspan="@rowspan">@task.TaskGroup.Name</th>
                            }
                            <th class="p-1" scope="row"><span style='text-align:center;font-size:medium;' title="">@task.TaskName</span></th>
                            <td class="p-1" style='text-align:center;font-size:small;' scope="row">@task.StartDate.ToString("yyyy-MM-dd")</td>
                            <td class="p-1" style='text-align:center;font-size:small;' scope="row">@task.EndDate.ToString("yyyy-MM-dd")</td>
                            @{
                                int hours = task.EstimateTime / 3600;
                                int minutes = (task.EstimateTime % 3600) / 60;
                                int seconds = task.EstimateTime % 60;

                                string estimateTime = "";

                                if (hours > 0)
                                {
                                    estimateTime = $"{hours:D2}:{minutes:D2}:{seconds:D2} horas";
                                }
                                else if (minutes > 0)
                                {
                                    estimateTime = $"{minutes:D2}:{seconds:D2} min";
                                }
                                else
                                {
                                    estimateTime = $"{seconds:D2} seg";
                                }
                                hours = task.ExecutionTime / 3600;
                                minutes = (task.ExecutionTime % 3600) / 60;
                                seconds = task.ExecutionTime % 60;

                                string executionTime = "";

                                if (hours > 0)
                                {
                                    executionTime = $"{hours:D2}:{minutes:D2}:{seconds:D2} horas";
                                }
                                else if (minutes > 0)
                                {
                                    executionTime = $"{minutes:D2}:{seconds:D2} min";
                                }
                                else
                                {
                                    executionTime = $"{seconds:D2} seg";
                                }
                            }
                            <td class="p-1" style='text-align:center;font-size:small;' scope="row">@estimateTime</td>
                            <td class="p-1" style='text-align:center;font-size:small;' scope="row" id="div_crono_1_@task.TaskID">@executionTime</td>
                            <td class="p-1" style='text-align:center;' scope="row">
                                <select class="custom-select" id="cod_estado_tarea" name="cod_estado_tarea" style="font-size:11px;cursor:pointer;" onchange="updateStatus('@task.TaskID',this.value)">
                                    @if (TempData["listStatus"] != null)
                                    {
                                        @foreach (ProjectTaskStatus taskStatus in (List<ProjectTaskStatus>)TempData["listStatus"])
                                        {
                                            bool selected = @taskStatus.ProjectTaskStatusID == @task.TaskStatusID ? true : false;
                                            <option value='@taskStatus.ProjectTaskStatusID' selected="@selected">@taskStatus.StatusName</option>
                                        }
                                    }
                                </select>
                            </td>
                            <td class="p-1" style='text-align:center;' scope="row">
                                <img id="task_@task.TaskID" style='width:24px;cursor:pointer;' src="~/img/play_time.png" title='Iniciar Tarea' onclick="playTask('@task.TaskID')" />
                            </td>
                            <td class="p-1" style='text-align:center;' scope="row">
                                <img style='width:24px;cursor:pointer;' src="~/img/add_time.png" title='Registrar Hora' />
                            </td>
                            <td class="p-1" style='text-align:center;' scope="row">
                                <img style='width:24px;cursor:pointer;' src="~/img/history_time.png" title='Historial' />
                            </td>
                        </tr>
                        previousTaskGroupID = task.TaskGroupID;
                    }
                }
            </tbody>
        </table>
    </div>
}

<script asp-append-version="true">
    function updateStatus(taskID,taskStatusID){
        console.log(taskID, taskStatusID)
        $.ajax({
            type:'put',
            url:`/project/task/updateStatus/${taskID}/${taskStatusID}`,
            success: function(res){
                DevExpress.ui.notify("Actualizado con exito", "success");
            },
            error: function(){
                DevExpress.ui.notify("Hubo un error actualizando el estado de la tarea.", "error");
            }
        })
    }
    function playTask(taskID){
        //$.ajax({
        //    type:'post',
        //    url: `/project/task/play/${taskID}`,
        //    success: function (res) {
        //        image = $('#task_' + taskID)
        //        images = $('img[title="Iniciar Tarea"]').toArray()
        //        images.pop(image)
        //        images.forEach((x)=>{$(x).hide()})
        //        image.src = '~/img/stop_time.png'
        //    },
        //    error: function () {
        //        DevExpress.ui.notify("Hubo un error iniciando la tarea", "error");
        //    }
        //})
    }
</script>