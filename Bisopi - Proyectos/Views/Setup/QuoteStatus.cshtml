<style>
    .displayColor {
        display: block;
        width: 100%;
        height: 100%;
    }
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-polyfill/7.10.1/polyfill.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/exceljs/3.8.0/exceljs.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>

<h4>Estados Leads</h4>
<hr />
<br />

@(Html.DevExtreme().DataGrid<Bisopi___Proyectos.Models.QuoteStatus>()
    .ID("gridContainer")
    .AllowColumnReordering(true)
    .RowAlternationEnabled(true)
    .AllowColumnResizing(true)
    .ShowRowLines(true)
    .ShowBorders(true)
    .WordWrapEnabled(true)
    .ColumnAutoWidth(true)
    .ColumnResizingMode(ColumnResizingMode.Widget)
    .SearchPanel(s => s
    .Visible(true)
    .HighlightCaseSensitive(true))
    .Grouping(grouping => grouping.AutoExpandAll(true))
    .GroupPanel(groupPanel => groupPanel.Visible(true))
    .FilterPanel(f => f.Visible(true))
    .HeaderFilter(h => h.Visible(true))
    .Selection(s => s.Mode(SelectionMode.Multiple))
    .Export(e => e.Enabled(true).AllowExportSelectedData(true))
    .OnExporting("exporting")
    .RemoteOperations(true)
    .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
    .DataSource(ds => ds.Mvc()
        .Controller("APIQuoteStatus")
        .LoadAction("Get")
        .InsertAction("Post")
        .UpdateAction("Put")
        .Key("QuoteStatusID")
    )
    .RemoteOperations(true)
    .Columns(columns => {

        columns.Add()
            .Type(GridCommandColumnType.Buttons)
            .Width(110)
            .Buttons(b =>
            {
                b.Add().Name(GridColumnButtonName.Edit);
            });

        columns.AddFor(m => m.QuoteStatusName);

        columns.AddFor(m => m.Abbreviation);

        columns.AddFor(m => m.Order);

        columns.AddFor(m => m.Color).CellTemplate(@<text>
            <div class="displayColor" style="background-color: <%- data.Color %>"><%- data.Color %></div>
        </text>);

        columns.AddFor(m => m.Visible);

        columns.AddFor(m => m.IsActive);

        columns.AddFor(m => m.CreatedBy).AllowEditing(false);

        columns.AddFor(m => m.Created).AllowEditing(false);

        columns.AddFor(m => m.ModifiedBy).AllowEditing(false);

        columns.AddFor(m => m.Modified).AllowEditing(false);
    })
    .Editing(e => e
        .AllowAdding(true)
        .AllowUpdating(true)
        .Mode(GridEditMode.Popup)
        .UseIcons(true)
        .Popup(p => p
                .Title("Estados Leads")
                .ShowTitle(true)
                .Width(700)
                .Height(525)
            )
            .Form(f => f.Items(items => {
                items.AddGroup()
                    .ColCount(2)
                    .ColSpan(2)
                    .Items(groupItems => {
                        groupItems.AddSimpleFor(m => m.QuoteStatusName).ColSpan(2);
                        groupItems.AddSimpleFor(m => m.Abbreviation);
                        groupItems.AddSimpleFor(m => m.Order);
                        groupItems.AddSimpleFor(m => m.Color).Editor(x => x.ColorBox());
                        groupItems.AddSimpleFor(m => m.Visible);
                        groupItems.AddSimpleFor(m => m.IsActive);
                    });
            }))
    )
)

<script>
    function exporting(e) {
        var workbook = new ExcelJS.Workbook();
        var worksheet = workbook.addWorksheet('ListaProyectos');

        DevExpress.excelExporter.exportDataGrid({
            component: e.component,
            worksheet: worksheet,
            autoFilterEnabled: true
        }).then(function () {
            workbook.xlsx.writeBuffer().then(function (buffer) {
                saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'Proyectos.xlsx');
            });
        });
        e.cancel = true;
    }

    function onColorBoxValueChanged(e) {
        var dataGrid = $("#gridContainer").dxDataGrid("instance");
        var rowKey = e.element.id.replace("colorBox_", "");
        var rowIndex = dataGrid.getRowIndexByKey(rowKey);
        dataGrid.cellValue(rowIndex, "Color", e.value);
    }
</script>

@section Scripts {
    <script src="https://cdn3.devexpress.com/jslib/21.1.5/js/dx.colorbox.js"></script>
}
