@model Bisopi___Proyectos.Models.Lead

<h4>Crear Lead</h4>
<hr />
<br />

<div class="row">
    <div class="col-12">
        <span class="float-right">
            <a class="btn btn-outline-primary" href="/Leads/Index">Volver</a>
        </span>
    </div>
    <div class="col-12">
        <form asp-controller="Leads" asp-action="Create" method="post" enctype="multipart/form-data">
            @Html.HiddenFor(x => x.LeadID, new { @class = "LeadID" })
            @using(Html.DevExtreme().ValidationGroup())
            {
                <div class="row">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="col-md-12">
                        <div class="form-group">
                        <div class="dx-field">
                            <div class="dx-field-item-label-location-top">@Html.LabelFor(x => x.LeadName)</div>
                                <div class="dx-field-item-content-location-bottom">
                                    @(Html.DevExtreme().TextBoxFor(x => x.LeadName)
                                    .ID("projectName")
                                        .Placeholder("Escriba el nombre del Lead")
                                    )
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="dx-field">
                                <div class="dx-field-item-label-location-top">@Html.LabelFor(x => x.ClientID)</div>
                                <div class="dx-field-item-content-location-bottom">
                                    @(Html.DevExtreme().SelectBoxFor(x => x.ClientID)
                                        .DisplayExpr("ClientNameAndAbbreviation")
                                        .ValueExpr("ClientID")
                                        .ID("clientID")
                                        .DataSource(d => d.Mvc().Controller("APIClients").LoadAction("GetSelectBox"))
                                        .SearchMode(DropDownSearchMode.Contains)
                                        .SearchEnabled(true)
                                        .MinSearchLength(3)
                                        .ShowDataBeforeSearch(true)
                                        .ShowDropDownButton(true)
                                        .DeferRendering(false)
                                        .Placeholder("Seleccione un cliente...")
                                    )
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-7">
                        <div class="form-group">
                            <div class="dx-field">
                                <div class="dx-field-item-label-location-top">@Html.LabelFor(x => x.ResponsibleClient)</div>
                                <div class="dx-field-item-content-location-bottom">
                                    @(Html.DevExtreme().TextBoxFor(x => x.ResponsibleClient)
                                        .ID("customerManager")
                                        .Placeholder("Escriba el responsable del cliente")
                                    )
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="dx-field">
                                <div class="dx-field-item-label-location-top">@Html.LabelFor(x => x.QuoteStatusID)</div>
                                <div class="dx-field-item-content-location-bottom">
                                    @(Html.DevExtreme().SelectBoxFor(x => x.QuoteStatusID)
                                        .DisplayExpr("QuoteStatusNameAndAbbreviation")
                                        .ValueExpr("QuoteStatusID")
                                        .ID("quoteStatusID")
                                        .DataSource(d => d.Mvc().Controller("APIQuoteStatus").LoadAction("GetSelectBox"))
                                        .SearchMode(DropDownSearchMode.Contains)
                                        .SearchEnabled(true)
                                        .MinSearchLength(3)
                                        .ShowDataBeforeSearch(true)
                                        .ShowDropDownButton(true)
                                        .DeferRendering(false)
                                        .Placeholder("Seleccione un estado...")
                                    )
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="dx-field">
                                <div class="dx-field-item-label-location-top">@Html.LabelFor(x => x.CurrencyID)</div>
                                <div class="dx-field-item-content-location-bottom">
                                @(Html.DevExtreme().SelectBoxFor(x => x.CurrencyID)
                                        .DisplayExpr("CurrencyNameAndAbbreviation")
                                        .ValueExpr("CurrencyID")
                                        .ID("currencyID")
                                        .DataSource(d => d.Mvc().Controller("APICurrencies").LoadAction("GetSelectBox"))
                                        .SearchMode(DropDownSearchMode.Contains)
                                        .SearchEnabled(true)
                                        .MinSearchLength(3)
                                        .ShowDataBeforeSearch(true)
                                        .ShowDropDownButton(true)
                                        .DeferRendering(false)
                                        .Placeholder("Seleccione una moneda...")
                                        )
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="dx-field">
                                <div class="dx-field-item-label-location-top">@Html.LabelFor(x => x.LeadValue)</div>
                                <div class="dx-field-item-content-location-bottom">
                                    @(Html.DevExtreme().NumberBoxFor(x => x.LeadValue)
                                        .ID("leadValue")
                                        .Placeholder("Escriba el valor del lead")
                                        .Format("$ #,##0.##")
                                        .InputAttr("aria-label", "Currency Format")
                                        )
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-12">
                        <div class="form-group">
                            <div class="dx-field">
                                <div class="dx-field-item-label-location-top">@Html.LabelFor(x => x.Comments)</div>
                                <div class="dx-field-item-content-location-bottom">
                                    @(Html.DevExtreme().TextAreaFor(x => x.Comments)
                                        .ID("justification")
                                        .Placeholder("Escriba los comentarios")
                                        .AutoResizeEnabled(true)
                                        )
                                </div>
                            </div>
                        </div>
                    </div>

                    <br />

                    <div class="col-md-12">
                        <div class="form-group">
                            <div class="center">
                                @(Html.DevExtreme().Button()
                                    .ElementAttr("class", "validate")
                                    .Text("Guardar")
                                    .Type(ButtonType.Normal)
                                    .UseSubmitBehavior(true)
                                    .OnClick("saveClick")
                                    )
                            </div>
                        </div>
                    </div>

                    <br />
                    <br />

                </div>
            }
        </form>
    </div>
</div>


<script>
    DevExpress.config({
        editorStylingMode: "filled"
    });

    function saveClick(e) {
        var result = e.validationGroup.validate();
        if (!result.isValid) {
            DevExpress.ui.notify("Debe diligenciar todos los campos obligatorios.", "error");
            e.cancel;
        }
    }
</script>